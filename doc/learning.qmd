---
title: "Reproducible document"
author: "Sabina Wagner"
format: html
---
## Setup code chunk

```{r setup}
#| message: false
#| warning: false
library(tidyverse)
post_meal_data <- read_csv2(
  here::here("data/post-meal-insulin.csv")
)

small_post_meal_data <- select(post_meal_data, id, Age, BMI, Group, auc_pg, auc_ins, glykemi)

tidier_post_meal_data <- small_post_meal_data |>
  rename(
    auc_glucose = auc_pg,
    auc_insulin = auc_ins
  ) |>
  filter(glykemi == 0) |>
  select(-glykemi)
```

## About me

- Sabina Wagner
- National Institute of Public Health, SDU

I am a phd student, working within the area of **stigma** related to *diabetes* and *overweight*

## Simple code

```{r}
3 * 3
```

## Other markdown

I can also write superscript^1^ and subscript~2~

## Git testing

Here is something that I have added to this document, and that I want to commit to git.

I am now making a second change, that I have committed.

## Showing the data

```{r}
post_meal_data
```
```{r}
glimpse(post_meal_data)
```
## Plots

```{r}
ggplot(post_meal_data, aes(x = BMI)) +
  geom_histogram()
```

```{r}
#| fig-cap: "Distribution of BMI"
#| label: fig-bmi-histogram
ggplot(post_meal_data, aes(x = BMI)) +
  geom_histogram()
```

Here is the distribution (see @fig-bmi-histogram)

## Exercise: Discrete plots

```{r}
#| fig-cap: "Groups"
#| label: fig-group
ggplot(post_meal_data, aes(x = Group)) +
  geom_bar()
```

See @fig-group above for a cool plot!

## Plotting two discrete variables

```{r}
post_meal_data |>
  ggplot(aes(x = Group, fill = as.character(glykemi))) +
  geom_bar()
```

```{r}
post_meal_data |>
  ggplot(aes(x = Group, fill = as.character(glykemi))) +
  geom_bar(position = position_dodge())
```

## Putting two plots side by side

```{r}
#| label: fig-bmi-group
#| fig-cap: "BMI and group, side by side"
#| fig-subcap:
#|  - "Distribution of BMI"
#|  - "Group size"
#| layout-ncol: 2
ggplot(post_meal_data, aes(x = BMI)) +
  geom_histogram()
ggplot(post_meal_data, aes(x = Group)) +
  geom_bar()
```
## Plotting two continuous variables

```{r}
#| label: fig-bmi-aucpg
#| fig-cap: "BMI by area under curve glucose"
ggplot(post_meal_data, aes(x = BMI, y = auc_pg)) +
  geom_smooth() +
  geom_point()
```
## Pushing changes to remote 

## Pulling changes from remote

## Selecting data

```{r}
select(post_meal_data, Age)

select(post_meal_data, Age, BMI, Weight)

select(post_meal_data, -Group)

select(post_meal_data, starts_with("PG"))

select(post_meal_data, ends_with("DXA"))

select(post_meal_data, contains("0"))
```

## Renaming specific columns

```{r}
small_post_meal_data |>
  rename(auc_glucose = auc_pg)

small_post_meal_data |>
  rename(
    auc_glucose = auc_pg,
    auc_insulin = auc_ins
  )
```

## Renaming and selecting tasks

```{r}
post_meal_data |>
  select(contains("OGTT"))

post_meal_data |>
  select(contains(".."), -contains("...")) |>
  rename(
    P.Glucose.minus5.OGTT = P.Glucose..5.OGTT,
    Insulin.minus5.OGTT.X = Insulin..5.OGTT.X
  )

post_meal_data |>
  select(id, BMI, Length, Weight, Age) |>
  rename(Height = Length)
```

## Filter by rows

```{r}
small_post_meal_data |>
  filter(glykemi == 1)

small_post_meal_data |>
  filter(BMI >= 25)

small_post_meal_data |>
  filter(Group == "CTR")
```
```{r}
small_post_meal_data |>
  filter(Group == "CTR" & BMI >= 25)

small_post_meal_data |>
  filter(Group == "CTR" | BMI >= 25)
```

## Modify or change column

```{r}
tidier_post_meal_data |> 
    mutate(insulin_glucose_ratio = auc_insulin / auc_glucose,
           Group = if_else(Group == "CTR", "Control", "First-degree relative"))
```
## practice with filter and mutate

Use filter() to find how many participants have a BMI of more than or equal to 20 and less than or equal to 40, and are in the “FDR” Group. How many are there?

```{r}
post_meal_data |> filter(BMI >= 20 & BMI <= 40 & Group == "FDR")
```


Create a percent_body_fat column with mutate() by dividing the Fat.mass.DXA by the Weight, then multiplying by 100. Hint: In R, use * to multiply and / to divide. Then pipe to filter() to find out how many participants have a percent_body_fat greater than 30.
 
```{r}
post_meal_data |> 
    mutate(percent_body_fat = Fat.mass.DXA / Weight * 100) |> filter(percent_body_fat > 30)
```

